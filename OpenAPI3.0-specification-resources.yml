openapi: 3.0.0

servers:
  # Added by API Auto Mocking Plugin
  # - description: SwaggerHub API Auto Mocking
  #   url: https://virtserver.swaggerhub.com/javiervidrua/TWID-SOA-API-resources/1.0.0
  - description: Local server
    url: http://localhost:5000

info:
  description: TWID-SOA API for the resources service.
  version: "1.0.0"
  title: TWID-SOA-API-resources
  contact:
    email: javiervidrua@gmail.com
  license:
    name: MIT
    url: 'https://jvr.mit-license.org/'
tags:
  - name: Map
    description: Everything related to the board, in this case it is called the map

paths:
  /map:
    get:
      tags:
        - Map
      summary: Get the resources of the map
      description: Get the resources of the map
      responses:
        '200':
          description: Map resources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/map'
  /map/round:
    get:
      tags:
        - Map
      summary: Get the round
      description: Get the round
      responses:
        '200':
          description: Round number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/map-round'
    post:
      tags:
        - Map
      summary: Create a new round (increment the current round number)
      description: Create a new round (increment the current round number)
      responses:
        '200':
          description: Round created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/map-round'
    put:
      tags:
        - Map
      summary: Update the round
      description: Update the round
      responses:
        '200':
          description: Round updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/map-round'
        '400':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/map-round'
        description: New round
    delete:
      tags:
        - Map
      summary: Reset the round to round 1
      description: Reset the round to round 1
      responses:
        '200':
          description: Round reset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/map-round'
  /map/score:
    get:
      tags:
        - Map
      summary: Get the score
      description: Get the score of the players
      responses:
        '200':
          description: Score of the players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/map-score'
  /map/score/{player}:
    get:
      tags:
        - Map
      summary: Get the score of the specified player
      description: Get the score of the specified player
      parameters:
        - in: path # can also be query, header, cookie
          name: player
          description: Name of the player
          required: true
          schema:
            type: string
            example: USA
      responses:
        '200':
          description: Score of the specified player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/map-score-player'
    put:
      tags:
        - Map
      summary: Update the score of the specified player
      description: Update the score of the specified player
      parameters:
        - in: path
          name: player
          description: Name of the player
          required: true
          schema:
            type: string
            example: USA
      responses:
        '200':
          description: Score updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/map-score-player'
        '400':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/map-score-player'
        description: New score of the specified player
    delete:
      tags:
        - Map
      summary: Reset the score of a player to score 0
      description: Reset the score of a player to score 0
      parameters:
        - in: path
          name: player
          description: Name of the player
          required: true
          schema:
            type: string
            example: USA
      responses:
        '200':
          description: Score reset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/map-score-player'
  /map/region:
    get:
      tags:
        - Map
      summary: Get the regions of the map
      description: Get the regions of the map
      responses:
        '200':
          description: Regions of the map
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/map-region'
  /map/region/{region}/country:
    get:
      tags:
        - Map
      summary: Get the countries of the specified region
      description: Get the countries of the specified region
      parameters:
        - in: path
          name: region
          description: Name of the region
          required: true
          schema:
            type: string
            example: Africa
      responses:
        '200':
          description: Countries of the specified region
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/map-region-region-country'
    put:
      tags:
        - Map
      summary: Update the countries of the specified region
      description: Update the countries of the specified region
      parameters:
        - in: path
          name: region
          description: Name of the region
          required: true
          schema:
            type: string
            example: Africa
      responses:
        '200':
          description: Countries of the specified region updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/map-region-region-country'
        '400':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/map-region-region-country'
        description: New countries of the specified region
  /map/region/{region}/country/{country}:
    get:
      tags:
        - Map
      summary: Get the specified country of the specified region
      description: Get the specified country of the specified region
      parameters:
        - in: path
          name: region
          description: Name of the region
          required: true
          schema:
            type: string
            example: Africa
        - in: path
          name: country
          description: Name of the country
          required: true
          schema:
            type: string
            example: Congo
      responses:
        '200':
          description: Specified country of the specified region
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/map-region-region-country-country'
    put:
      tags:
        - Map
      summary: Update the specified country of the specified region
      description: Update the specified country of the specified region
      parameters:
        - in: path
          name: region
          description: Name of the region
          required: true
          schema:
            type: string
            example: Africa
        - in: path
          name: country
          description: Name of the country
          required: true
          schema:
            type: string
            example: Congo
      responses:
        '200':
          description: Specified country of the specified region updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/map-region-region-country-country'
        '400':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/map-region-region-country-country'
        description: New attributes of the specified country of the specified region

components:
  schemas:
    map:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Region
    map-round:
      type: object
      required:
        - round
      properties:
        round:
          type: integer
          format: int32
          minimum: 1
          maximum: 8
          example: 1
    map-score:
      type: object
      required:
        - name
        - score
      properties:
        name:
          type: string
          example: USA
        score:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          example: 4
    map-score-player:
      type: object
      required:
        - score
      properties:
        score:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          example: 0
    map-region:
      type: object
      required:
        - region
      properties:
        region:
          type: string
          example: Middle east
    map-region-region-country:
      type: object
      required:
        - country
      properties:
        country:
          type: string
          example: Congo
    map-region-region-country-country:
      type: object
      required:
        - stability
        - isConflictive
        - isOilProducer
        - influence
      properties:
        stability:
          type: integer
          format: int32
          minimum: 1
          maximum: 5
          example: 2
        isConflictive:
          type: boolean
          example: true
        isOilProducer:
          type: boolean
          example: true
        influence:
          type: array
          items:
            type: object
            required:
              - superPower
              - influence
            properties:
              superPower:
                type: string
                example: USA
              influence:
                type: integer
                format: int32
                minimum: 0
                maximum: 100
                example: 1

# # Autogenerated, use as examples
# InventoryItem:
#   type: object
#   required:
#     - id
#     - name
#     - manufacturer
#     - releaseDate
#   properties:
#     id:
#       type: string
#       format: uuid
#       example: d290f1ee-6c54-4b01-90e6-d701748f0851
#     name:
#       type: string
#       example: Widget Adapter
#     releaseDate:
#       type: string
#       format: date-time
#       example: '2016-08-29T09:12:33.001Z'
#     manufacturer:
#       $ref: '#/components/schemas/Manufacturer'
# Manufacturer:
#   required:
#     - name
#   properties:
#     name:
#       type: string
#       example: ACME Corporation
#     homePage:
#       type: string
#       format: url
#       example: 'https://www.acme-corp.com'
#     phone:
#       type: string
#       example: 408-867-5309
#   type: object